{"version":3,"file":"static/js/134.e80d25a0.chunk.js","mappings":"6LA0CA,UAtCe,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,CAAC,UAAW,UAAW,YAA5D,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAO,UAAGF,EAAaG,IAAI,kBAApB,QAAkC,GAG/CC,QAAQC,IAAIT,GAEZ,IASMU,EAAgBX,EAAOY,QAAO,SAAAC,GAAK,OAAIA,EAAMC,SAASP,EAAnB,IAEzC,OACE,4BACE,kBAAOQ,KAAK,OAAOC,MAAOT,EAASU,SAbb,SAAAC,GACxB,IAAMC,EAAcD,EAAIE,OAAOJ,MAC/B,GAAoB,KAAhBG,EACF,OAAOb,EAAgB,CAAC,GAG1BA,EAAgB,CAAEC,QAASY,GAC5B,KAOG,wBACGR,EAAcU,KAAI,SAAAR,GACjB,OACE,yBACE,SAAC,KAAD,CAAMS,GAAE,UAAKT,GAASU,MAAO,CAAEC,KAAMtB,GAArC,SACGW,KAFIA,EAMZ,QAIR,C","sources":["pages/Movies.jsx"],"sourcesContent":["// import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(['movie-1', 'movie-2', 'movie-3']);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieId = searchParams.get('movieId') ?? '';\n  // useEffect(() => {HTTP},[]);\n\n  console.log(setMovies); //для того, что деплоилось, функционал никакой\n\n  const updateQueryString = evt => {\n    const movieIdVaue = evt.target.value;\n    if (movieIdVaue === '') {\n      return setSearchParams({});\n    }\n\n    setSearchParams({ movieId: movieIdVaue });\n  };\n\n  const visibleMovies = movies.filter(movie => movie.includes(movieId));\n\n  return (\n    <div>\n      <input type=\"text\" value={movieId} onChange={updateQueryString} />\n      <ul>\n        {visibleMovies.map(movie => {\n          return (\n            <li key={movie}>\n              <Link to={`${movie}`} state={{ from: location }}>\n                {movie}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","movieId","get","console","log","visibleMovies","filter","movie","includes","type","value","onChange","evt","movieIdVaue","target","map","to","state","from"],"sourceRoot":""}